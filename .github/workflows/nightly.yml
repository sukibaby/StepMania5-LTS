on:
  push:
    branches:
      - beta
    paths-ignore:
      - '**.md'

name: Nightly release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, windows-latest] # TODO: macos-13
        include:
          - os: ubuntu-latest
            name: Ubuntu x86_64
            install: sudo apt-get update && sudo apt-get install -y libasound2-dev libgl-dev libglu1-mesa-dev libgtk-3-dev libjack-dev libmad0-dev libpulse-dev libudev-dev libxinerama-dev libx11-dev libxrandr-dev libxtst-dev nasm
            configure: cmake -B build -DWITH_FFMPEG_JOBS="$(nproc)"
            release: |
              cmake -B build -DCMAKE_BUILD_TYPE=Release -DWITH_FULL_RELEASE=Off -DWITH_NIGHTLY_RELEASE=On -DWITH_CLUB_FANTASTIC=Off
              cmake --build build --target package
            path: build/ITGmania-*-NIGHTLY-git-*-Linux-no-songs.tar.gz
          - os: ubuntu-24.04-arm
            name: Ubuntu ARM
            install: sudo apt-get update && sudo apt-get install -y libasound2-dev libgl-dev libglu1-mesa-dev libgtk-3-dev libjack-dev libmad0-dev libpulse-dev libudev-dev libxinerama-dev libx11-dev libxrandr-dev libxtst-dev nasm
            configure: cmake -B build -DWITH_FFMPEG_JOBS="$(nproc)"
            release: |
              cmake -B build -DCMAKE_BUILD_TYPE=Release -DWITH_FULL_RELEASE=Off -DWITH_NIGHTLY_RELEASE=On -DWITH_CLUB_FANTASTIC=Off -DWITH_MINIMAID=Off
              cmake --build build --target package
            path: build/ITGmania-*-NIGHTLY-git-*-Linux-no-songs.tar.gz
          - os: macos-latest
            name: macOS (M1)
            install: brew install nasm
            configure: cmake -B build -DCMAKE_OSX_ARCHITECTURES=arm64 -DWITH_FFMPEG_JOBS="$(sysctl -n hw.logicalcpu)"
            release: |
              cmake -B build -DCMAKE_BUILD_TYPE=Release -DWITH_FULL_RELEASE=Off -DWITH_NIGHTLY_RELEASE=On -DCMAKE_OSX_ARCHITECTURES=arm64 -DWITH_CLUB_FANTASTIC=Off
              cmake --build build --target package
            path: build/ITGmania-*-NIGHTLY-git-*-macOS-M1-no-songs.dmg
          - os: windows-latest
            name: Windows
            configure: cmake -B build -DWITH_FFMPEG_JOBS="$env:NUMBER_OF_PROCESSORS"
            release: |
              cmake -B build -DWITH_FULL_RELEASE=Off -DWITH_NIGHTLY_RELEASE=On -DWITH_CLUB_FANTASTIC=Off
              cmake --build build --config Release --target package
            path: build/ITGmania-*-NIGHTLY-git-*-Windows-no-songs.exe
    name: ${{ matrix.name }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache CMake build directory
        uses: actions/cache@v4
        with:
          path: |
            build/*
            !${{ matrix.path }}
          key: ${{ runner.os }}-${{ runner.arch }}-cmake-build-nightly-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-cmake-build-nightly-
      - name: Install dependencies
        if: matrix.os != 'windows-latest'
        run: ${{ matrix.install }}
      - name: Add msbuild to PATH
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64
      - name: Create nightly release
        run: ${{ matrix.release }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ITGmania-${{ github.sha }}-${{ matrix.name }}-${{ matrix.arch }}
          path: ${{ matrix.path }}
          compression-level: 0
